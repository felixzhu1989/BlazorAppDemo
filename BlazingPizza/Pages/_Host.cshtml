@page "/"
@namespace BlazingPizza.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <base href="/" />
    <link rel="icon" href="img/icon-512.png" />
    <link href="css/bootstrap/bootstrap.min.css" rel="stylesheet" />
    <link href="css/site.css" rel="stylesheet" />
    <title>Blazing Pizza</title>
</head>
<body>

    @*<div id="app">
    <div class="content">
    <component type="typeof(App)" render-mode="ServerPrerendered" />
    </div>
    </div>*@
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    @*名为 SweetAlert 的小型 JavaScript 库，添加如下代码，这样便可以在客户端调用 SweetAlert。*@
<script src="https://cdn.jsdelivr.net/npm/sweetalert@latest/dist/sweetalert.min.js"></script>


<script lang="javascript">
    var objectRef;

        //OrderDetail 组件在页面引用自身呈现后调用 populateObjectRef 函数。
    window.populateObjectRef = (ref) => {
        objectRef = ref;
        refreshOrderStatus();
    };

        //refreshOrderStatus 函数使用此引用调用 GetOrderStatus，然后使用返回的状态字符串更新 <strong> 标记。
    window.refreshOrderStatus = async () => {
        var statusText = await objectRef.invokeMethodAsync('GetOrderStatus');
        document.querySelector('#orderStatus').innerText = statusText;
        if (statusText != "Delivered") {
            setTimeout(function(){ refreshOrderStatus(); }, 3000);
        } else {
            document.querySelector('#progressSpinner').remove();
        }
    };

    window.disableElement = (element) => element.disabled = "disabled";
</script>

</body>
</html>
